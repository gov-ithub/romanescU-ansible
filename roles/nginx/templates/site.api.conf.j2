#{{ ansible_managed }}
server {
{% for v in nginx_sites[item] %}
    listen 80
    server_name {{item.server_name}} www.{{item.server_name}}
    return 301 https://{{item.server_name}}$request_uri
{% endfor %}
}
server {
{% for v in nginx_sites[item] %}
    listen {{item.listen}}
	server_name {{item.server_name}};

	#-->Client: max size
	client_max_body_size 20M;
	large_client_header_buffers 4 32k;
    #-->Logs
	access_log /var/log/nginx/{{item.server_name}}.access.log;
	error_log  /var/log/nginx/{{item.server_name}}.error.log;
    #-->SSL: certificates
    ssl_certificate /etc/letsencrypt/live/{{item.server_name}}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{item.server_name}}/privkey.pem;
    ssl_dhparam /etc/ssl/certs/dhparam.pem;
    #ssl_trusted_certificate /etc/letsencrypt/live/{{item.server_name}}.crt;
    
    #-->SSL
    keepalive_timeout   70;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1; 
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off; 
    ssl_stapling on;
    ssl_stapling_verify on; 
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    add_header Strict-Transport-Security "max-age=2592000; includeSubDomains; preload";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

    #-->Root: route
    location ~ /api/v1/(.*)$ {
        rewrite /api/v1/(.*) /$1 break;
        add_header 'Access-Control-Allow-Origin' '*'; #temporary

        proxy_pass http://spring_api;
        proxy_http_version 1.1;
        proxy_set_header Connection "Keep-Alive";
        proxy_set_header Proxy-Connection "Keep-Alive";
    }
{% endfor %}
}